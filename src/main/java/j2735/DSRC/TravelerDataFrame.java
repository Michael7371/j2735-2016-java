package j2735.DSRC;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import lombok.Getter;
import lombok.Setter;
import asn2pojo.runtime.annotations.Asn1Property;
import asn2pojo.runtime.types.Asn1Choice;
import java.util.List;
import java.util.Optional;
import asn2pojo.runtime.types.Asn1Type;
import asn2pojo.runtime.types.Asn1SequenceOf;
import j2735.ITIS.ITIScodesAndText;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import asn2pojo.runtime.serialization.NestedSequenceOfDeserializer;
import asn2pojo.runtime.serialization.NestedSequenceOfSerializer;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

/**
 * 
 *******************************************************************************
 *
 * This source file was generated by a tool. Beware manual edits might be
 * overwritten in future releases. asn1jvm v1.0-SNAPSHOT
 *
 *******************************************************************************
 * Copyright 2024 USDOT
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 ******************************************************************************
 * 
 */
@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class TravelerDataFrame extends Asn1Sequence {

	@Asn1Property(tag = 0)
	@JsonDeserialize(using = SSPindex.SSPindexDeserializer.class)
	private SSPindex sspTimRights;
	@Asn1Property(tag = 1)
	private TravelerInfoType frameType;
	@Asn1Property(tag = 2)
	private MsgIdChoice msgId;
	@Asn1Property(tag = 3, optional = true)
	@JsonDeserialize(using = DYear.DYearDeserializer.class)
	private DYear startYear;
	@Asn1Property(tag = 4)
	@JsonDeserialize(using = MinuteOfTheYear.MinuteOfTheYearDeserializer.class)
	private MinuteOfTheYear startTime;
	@Asn1Property(tag = 5)
	@JsonDeserialize(using = MinutesDuration.MinutesDurationDeserializer.class)
	private MinutesDuration duratonTime;
	@Asn1Property(tag = 6)
	@JsonDeserialize(using = SignPrority.SignProrityDeserializer.class)
	private SignPrority priority;
	@Asn1Property(tag = 7)
	@JsonDeserialize(using = SSPindex.SSPindexDeserializer.class)
	private SSPindex sspLocationRights;
	@Asn1Property(tag = 8)
	private SequenceOfRegions regions;
	@Asn1Property(tag = 9)
	@JsonDeserialize(using = SSPindex.SSPindexDeserializer.class)
	private SSPindex sspMsgRights1;
	@Asn1Property(tag = 10)
	@JsonDeserialize(using = SSPindex.SSPindexDeserializer.class)
	private SSPindex sspMsgRights2;
	@Asn1Property(tag = 11)
	private ContentChoice content;
	@Asn1Property(tag = 12, optional = true)
	private URL_Short url;

	@Getter
	@Setter
	@JsonInclude(Include.NON_NULL)
	public static class MsgIdChoice extends Asn1Choice {
		@Asn1Property(tag = 0)
		private FurtherInfoID furtherInfoID;
		@Asn1Property(tag = 1)
		private RoadSignID roadSignID;

		MsgIdChoice() {
			super(false);
		}

		@Override
		protected List<Optional<Asn1Type>> listTypes() {
			return null;
		}
	}

	@JsonInclude(Include.NON_NULL)
	public static class SequenceOfRegions extends Asn1SequenceOf<GeographicalPath> {
		SequenceOfRegions() {
			super(GeographicalPath.class, 1L, 16L);
		}
	}

	@Getter
	@Setter
	@JsonInclude(Include.NON_NULL)
	public static class ContentChoice extends Asn1Choice {
		@Asn1Property(tag = 0)
		@JsonDeserialize(using = AdvisoryDeserializer.class)
		@JsonSerialize(using = AdvisorySerializer.class)
		private ITIScodesAndText advisory;
		@Asn1Property(tag = 1)
		@JsonDeserialize(using = WorkZoneDeserializer.class)
		@JsonSerialize(using = WorkZoneSerializer.class)
		private WorkZone workZone;
		@Asn1Property(tag = 2)
		@JsonDeserialize(using = GenericSignDeserializer.class)
		@JsonSerialize(using = GenericSignSerializer.class)
		private GenericSignage genericSign;
		@Asn1Property(tag = 3)
		@JsonDeserialize(using = SpeedLimitDeserializer.class)
		@JsonSerialize(using = SpeedLimitSerializer.class)
		private SpeedLimit speedLimit;
		@Asn1Property(tag = 4)
		@JsonDeserialize(using = ExitServiceDeserializer.class)
		@JsonSerialize(using = ExitServiceSerializer.class)
		private ExitService exitService;

		ContentChoice() {
			super(false);
		}

		@Override
		protected List<Optional<Asn1Type>> listTypes() {
			return null;
		}
	}

	TravelerDataFrame() {
		super(true);
	}

	public static class AdvisoryDeserializer extends NestedSequenceOfDeserializer<ITIScodesAndText> {
		public AdvisoryDeserializer() {
			super(ITIScodesAndText.class, "SEQUENCE");
		}
	}

	public static class AdvisorySerializer extends NestedSequenceOfSerializer<ITIScodesAndText> {
		public AdvisorySerializer() {
			super(ITIScodesAndText.class, "SEQUENCE");
		}
	}

	public static class WorkZoneDeserializer extends NestedSequenceOfDeserializer<WorkZone> {
		public WorkZoneDeserializer() {
			super(WorkZone.class, "SEQUENCE");
		}
	}

	public static class WorkZoneSerializer extends NestedSequenceOfSerializer<WorkZone> {
		public WorkZoneSerializer() {
			super(WorkZone.class, "SEQUENCE");
		}
	}

	public static class GenericSignDeserializer extends NestedSequenceOfDeserializer<GenericSignage> {
		public GenericSignDeserializer() {
			super(GenericSignage.class, "SEQUENCE");
		}
	}

	public static class GenericSignSerializer extends NestedSequenceOfSerializer<GenericSignage> {
		public GenericSignSerializer() {
			super(GenericSignage.class, "SEQUENCE");
		}
	}

	public static class SpeedLimitDeserializer extends NestedSequenceOfDeserializer<SpeedLimit> {
		public SpeedLimitDeserializer() {
			super(SpeedLimit.class, "SEQUENCE");
		}
	}

	public static class SpeedLimitSerializer extends NestedSequenceOfSerializer<SpeedLimit> {
		public SpeedLimitSerializer() {
			super(SpeedLimit.class, "SEQUENCE");
		}
	}

	public static class ExitServiceDeserializer extends NestedSequenceOfDeserializer<ExitService> {
		public ExitServiceDeserializer() {
			super(ExitService.class, "SEQUENCE");
		}
	}

	public static class ExitServiceSerializer extends NestedSequenceOfSerializer<ExitService> {
		public ExitServiceSerializer() {
			super(ExitService.class, "SEQUENCE");
		}
	}
}