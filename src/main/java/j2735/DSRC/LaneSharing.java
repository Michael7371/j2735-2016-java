package j2735.DSRC;

import asn2pojo.runtime.types.Asn1Bitstring;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonDeserialize(using = LaneSharingDeserializer.class)
public class LaneSharing extends Asn1Bitstring {

	public boolean isOverlappingLaneDescriptionProvided() {
		return get(0);
	}

	public void setOverlappingLaneDescriptionProvided(boolean overlappingLaneDescriptionProvided) {
		set(0, overlappingLaneDescriptionProvided);
	}

	public boolean isMultipleLanesTreatedAsOneLane() {
		return get(1);
	}

	public void setMultipleLanesTreatedAsOneLane(boolean multipleLanesTreatedAsOneLane) {
		set(1, multipleLanesTreatedAsOneLane);
	}

	public boolean isOtherNonMotorizedTrafficTypes() {
		return get(2);
	}

	public void setOtherNonMotorizedTrafficTypes(boolean otherNonMotorizedTrafficTypes) {
		set(2, otherNonMotorizedTrafficTypes);
	}

	public boolean isIndividualMotorizedVehicleTraffic() {
		return get(3);
	}

	public void setIndividualMotorizedVehicleTraffic(boolean individualMotorizedVehicleTraffic) {
		set(3, individualMotorizedVehicleTraffic);
	}

	public boolean isBusVehicleTraffic() {
		return get(4);
	}

	public void setBusVehicleTraffic(boolean busVehicleTraffic) {
		set(4, busVehicleTraffic);
	}

	public boolean isTaxiVehicleTraffic() {
		return get(5);
	}

	public void setTaxiVehicleTraffic(boolean taxiVehicleTraffic) {
		set(5, taxiVehicleTraffic);
	}

	public boolean isPedestriansTraffic() {
		return get(6);
	}

	public void setPedestriansTraffic(boolean pedestriansTraffic) {
		set(6, pedestriansTraffic);
	}

	public boolean isCyclistVehicleTraffic() {
		return get(7);
	}

	public void setCyclistVehicleTraffic(boolean cyclistVehicleTraffic) {
		set(7, cyclistVehicleTraffic);
	}

	public boolean isTrackedVehicleTraffic() {
		return get(8);
	}

	public void setTrackedVehicleTraffic(boolean trackedVehicleTraffic) {
		set(8, trackedVehicleTraffic);
	}

	public boolean isPedestrianTraffic() {
		return get(9);
	}

	public void setPedestrianTraffic(boolean pedestrianTraffic) {
		set(9, pedestrianTraffic);
	}

	public LaneSharing() {
		super(10, false,
				new String[]{"overlappingLaneDescriptionProvided", "multipleLanesTreatedAsOneLane",
						"otherNonMotorizedTrafficTypes", "individualMotorizedVehicleTraffic", "busVehicleTraffic",
						"taxiVehicleTraffic", "pedestriansTraffic", "cyclistVehicleTraffic", "trackedVehicleTraffic",
						"pedestrianTraffic"});
	}
}