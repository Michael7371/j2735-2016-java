package j2735.DSRC;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import asn2pojo.runtime.annotations.Asn1Property;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class VehicleStatus extends Asn1Sequence {

	@Asn1Property(tag = 0, optional = true)
	private ExteriorLights lights;
	@Asn1Property(tag = 1, optional = true)
	private LightbarInUse lightBar;
	@Asn1Property(tag = 2, optional = true)
	private WiperSet wipers;
	@Asn1Property(tag = 3, optional = true)
	private BrakeSystemStatus brakeStatus;
	@Asn1Property(tag = 4, optional = true)
	private BrakeAppliedPressure brakePressure;
	@Asn1Property(tag = 5, optional = true)
	private CoefficientOfFriction roadFriction;
	@Asn1Property(tag = 6, optional = true)
	private SunSensor sunData;
	@Asn1Property(tag = 7, optional = true)
	private RainSensor rainData;
	@Asn1Property(tag = 8, optional = true)
	private AmbientAirTemperature airTemp;
	@Asn1Property(tag = 9, optional = true)
	private AmbientAirPressure airPres;
	@Asn1Property(tag = 10, optional = true)
	private Asn1Sequence steering;
	@Asn1Property(tag = 11, optional = true)
	private Asn1Sequence accelSets;
	@Asn1Property(tag = 12, optional = true)
	private Asn1Sequence object;
	@Asn1Property(tag = 13, optional = true)
	private FullPositionVector fullPos;
	@Asn1Property(tag = 14, optional = true)
	private ThrottlePosition throttlePos;
	@Asn1Property(tag = 15, optional = true)
	private SpeedandHeadingandThrottleConfidence speedHeadC;
	@Asn1Property(tag = 16, optional = true)
	private SpeedConfidence speedC;
	@Asn1Property(tag = 17, optional = true)
	private Asn1Sequence vehicleData;
	@Asn1Property(tag = 18, optional = true)
	private VehicleIdent vehicleIdent;
	@Asn1Property(tag = 19, optional = true)
	private J1939data j1939data;
	@Asn1Property(tag = 20, optional = true)
	private Asn1Sequence weatherReport;
	@Asn1Property(tag = 21, optional = true)
	private GNSSstatus gnssStatus;

	public ExteriorLights getLights() {
		return lights;
	}

	public void setLights(ExteriorLights lights) {
		this.lights = lights;
	}

	public LightbarInUse getLightBar() {
		return lightBar;
	}

	public void setLightBar(LightbarInUse lightBar) {
		this.lightBar = lightBar;
	}

	public WiperSet getWipers() {
		return wipers;
	}

	public void setWipers(WiperSet wipers) {
		this.wipers = wipers;
	}

	public BrakeSystemStatus getBrakeStatus() {
		return brakeStatus;
	}

	public void setBrakeStatus(BrakeSystemStatus brakeStatus) {
		this.brakeStatus = brakeStatus;
	}

	public BrakeAppliedPressure getBrakePressure() {
		return brakePressure;
	}

	public void setBrakePressure(BrakeAppliedPressure brakePressure) {
		this.brakePressure = brakePressure;
	}

	public CoefficientOfFriction getRoadFriction() {
		return roadFriction;
	}

	public void setRoadFriction(CoefficientOfFriction roadFriction) {
		this.roadFriction = roadFriction;
	}

	public SunSensor getSunData() {
		return sunData;
	}

	public void setSunData(SunSensor sunData) {
		this.sunData = sunData;
	}

	public RainSensor getRainData() {
		return rainData;
	}

	public void setRainData(RainSensor rainData) {
		this.rainData = rainData;
	}

	public AmbientAirTemperature getAirTemp() {
		return airTemp;
	}

	public void setAirTemp(AmbientAirTemperature airTemp) {
		this.airTemp = airTemp;
	}

	public AmbientAirPressure getAirPres() {
		return airPres;
	}

	public void setAirPres(AmbientAirPressure airPres) {
		this.airPres = airPres;
	}

	public Asn1Sequence getSteering() {
		return steering;
	}

	public void setSteering(Asn1Sequence steering) {
		this.steering = steering;
	}

	public Asn1Sequence getAccelSets() {
		return accelSets;
	}

	public void setAccelSets(Asn1Sequence accelSets) {
		this.accelSets = accelSets;
	}

	public Asn1Sequence getObject() {
		return object;
	}

	public void setObject(Asn1Sequence object) {
		this.object = object;
	}

	public FullPositionVector getFullPos() {
		return fullPos;
	}

	public void setFullPos(FullPositionVector fullPos) {
		this.fullPos = fullPos;
	}

	public ThrottlePosition getThrottlePos() {
		return throttlePos;
	}

	public void setThrottlePos(ThrottlePosition throttlePos) {
		this.throttlePos = throttlePos;
	}

	public SpeedandHeadingandThrottleConfidence getSpeedHeadC() {
		return speedHeadC;
	}

	public void setSpeedHeadC(SpeedandHeadingandThrottleConfidence speedHeadC) {
		this.speedHeadC = speedHeadC;
	}

	public SpeedConfidence getSpeedC() {
		return speedC;
	}

	public void setSpeedC(SpeedConfidence speedC) {
		this.speedC = speedC;
	}

	public Asn1Sequence getVehicleData() {
		return vehicleData;
	}

	public void setVehicleData(Asn1Sequence vehicleData) {
		this.vehicleData = vehicleData;
	}

	public VehicleIdent getVehicleIdent() {
		return vehicleIdent;
	}

	public void setVehicleIdent(VehicleIdent vehicleIdent) {
		this.vehicleIdent = vehicleIdent;
	}

	public J1939data getJ1939data() {
		return j1939data;
	}

	public void setJ1939data(J1939data j1939data) {
		this.j1939data = j1939data;
	}

	public Asn1Sequence getWeatherReport() {
		return weatherReport;
	}

	public void setWeatherReport(Asn1Sequence weatherReport) {
		this.weatherReport = weatherReport;
	}

	public GNSSstatus getGnssStatus() {
		return gnssStatus;
	}

	public void setGnssStatus(GNSSstatus gnssStatus) {
		this.gnssStatus = gnssStatus;
	}

	VehicleStatus() {
		super(true);
	}
}