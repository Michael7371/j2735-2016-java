package j2735.DSRC;

import asn2pojo.runtime.annotations.Asn1Property;
import asn2pojo.runtime.types.Asn1Sequence;
import asn2pojo.runtime.types.Asn1SequenceOf;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import j2735.REGION.Reg_IntersectionState;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class IntersectionState extends Asn1Sequence {

	@Asn1Property(tag = 0, optional = true)
	private DescriptiveName name;
	@Asn1Property(tag = 1)
	private IntersectionReferenceID id;
	@Asn1Property(tag = 2)
	private MsgCount revision;
	@Asn1Property(tag = 3)
	private IntersectionStatusObject status;
	@Asn1Property(tag = 4, optional = true)
	private MinuteOfTheYear moy;
	@Asn1Property(tag = 5, optional = true)
	private DSecond timeStamp;
	@Asn1Property(tag = 6, optional = true)
	@JacksonXmlElementWrapper(localName = "enabledLanes")
	@JacksonXmlProperty(localName = "LaneID")
	private EnabledLaneList enabledLanes;
	@Asn1Property(tag = 7)
	@JacksonXmlElementWrapper(localName = "states")
	@JacksonXmlProperty(localName = "MovementState")
	private MovementList states;
	@Asn1Property(tag = 8, optional = true)
	@JacksonXmlElementWrapper(localName = "maneuverAssistList")
	@JacksonXmlProperty(localName = "ConnectionManeuverAssist")
	private ManeuverAssistList maneuverAssistList;
	@Asn1Property(tag = 9, optional = true)
	private SequenceOfRegional regional;

	public DescriptiveName getName() {
		return name;
	}

	public void setName(DescriptiveName name) {
		this.name = name;
	}

	public IntersectionReferenceID getId() {
		return id;
	}

	public void setId(IntersectionReferenceID id) {
		this.id = id;
	}

	public MsgCount getRevision() {
		return revision;
	}

	public void setRevision(MsgCount revision) {
		this.revision = revision;
	}

	public IntersectionStatusObject getStatus() {
		return status;
	}

	public void setStatus(IntersectionStatusObject status) {
		this.status = status;
	}

	public MinuteOfTheYear getMoy() {
		return moy;
	}

	public void setMoy(MinuteOfTheYear moy) {
		this.moy = moy;
	}

	public DSecond getTimeStamp() {
		return timeStamp;
	}

	public void setTimeStamp(DSecond timeStamp) {
		this.timeStamp = timeStamp;
	}

	public EnabledLaneList getEnabledLanes() {
		return enabledLanes;
	}

	public void setEnabledLanes(EnabledLaneList enabledLanes) {
		this.enabledLanes = enabledLanes;
	}

	public MovementList getStates() {
		return states;
	}

	public void setStates(MovementList states) {
		this.states = states;
	}

	public ManeuverAssistList getManeuverAssistList() {
		return maneuverAssistList;
	}

	public void setManeuverAssistList(ManeuverAssistList maneuverAssistList) {
		this.maneuverAssistList = maneuverAssistList;
	}

	@JsonInclude(Include.NON_NULL)
	public static class SequenceOfRegional extends Asn1SequenceOf<Reg_IntersectionState> {
		SequenceOfRegional() {
			super(Reg_IntersectionState.class, 1L, 4L);
		}
	}

	public SequenceOfRegional getRegional() {
		return regional;
	}

	public void setRegional(SequenceOfRegional regional) {
		this.regional = regional;
	}

	IntersectionState() {
		super(true);
	}
}