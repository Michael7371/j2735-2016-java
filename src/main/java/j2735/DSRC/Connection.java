package j2735.DSRC;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import asn2pojo.runtime.annotations.Asn1Property;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class Connection extends Asn1Sequence {

	@Asn1Property(tag = 0)
	private ConnectingLane connectingLane;
	@Asn1Property(tag = 1, optional = true)
	private IntersectionReferenceID remoteIntersection;
	@Asn1Property(tag = 2, optional = true)
	private SignalGroupID signalGroup;
	@Asn1Property(tag = 3, optional = true)
	private RestrictionClassID userClass;
	@Asn1Property(tag = 4, optional = true)
	private LaneConnectionID connectionID;

	public ConnectingLane getConnectingLane() {
		return connectingLane;
	}

	public void setConnectingLane(ConnectingLane connectingLane) {
		this.connectingLane = connectingLane;
	}

	public IntersectionReferenceID getRemoteIntersection() {
		return remoteIntersection;
	}

	public void setRemoteIntersection(IntersectionReferenceID remoteIntersection) {
		this.remoteIntersection = remoteIntersection;
	}

	public SignalGroupID getSignalGroup() {
		return signalGroup;
	}

	public void setSignalGroup(SignalGroupID signalGroup) {
		this.signalGroup = signalGroup;
	}

	public RestrictionClassID getUserClass() {
		return userClass;
	}

	public void setUserClass(RestrictionClassID userClass) {
		this.userClass = userClass;
	}

	public LaneConnectionID getConnectionID() {
		return connectionID;
	}

	public void setConnectionID(LaneConnectionID connectionID) {
		this.connectionID = connectionID;
	}

	Connection() {
		super(false);
	}
}