package j2735.DSRC;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import asn2pojo.runtime.annotations.Asn1Property;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class Header extends Asn1Sequence {

	@Asn1Property(tag = 0, optional = true)
	@JsonDeserialize(using = DYear.DYearDeserializer.class)
	private DYear year;
	@Asn1Property(tag = 1, optional = true)
	@JsonDeserialize(using = MinuteOfTheYear.MinuteOfTheYearDeserializer.class)
	private MinuteOfTheYear timeStamp;
	@Asn1Property(tag = 2, optional = true)
	@JsonDeserialize(using = DSecond.DSecondDeserializer.class)
	private DSecond secMark;
	@Asn1Property(tag = 3, optional = true)
	@JsonDeserialize(using = MsgCount.MsgCountDeserializer.class)
	private MsgCount msgIssueRevision;

	public DYear getYear() {
		return year;
	}

	public void setYear(DYear year) {
		this.year = year;
	}

	public MinuteOfTheYear getTimeStamp() {
		return timeStamp;
	}

	public void setTimeStamp(MinuteOfTheYear timeStamp) {
		this.timeStamp = timeStamp;
	}

	public DSecond getSecMark() {
		return secMark;
	}

	public void setSecMark(DSecond secMark) {
		this.secMark = secMark;
	}

	public MsgCount getMsgIssueRevision() {
		return msgIssueRevision;
	}

	public void setMsgIssueRevision(MsgCount msgIssueRevision) {
		this.msgIssueRevision = msgIssueRevision;
	}

	Header() {
		super(true);
	}
}