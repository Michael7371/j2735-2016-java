package j2735.DSRC;

import asn2pojo.runtime.types.Asn1Bitstring;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonDeserialize(using = LaneAttributes_BarrierDeserializer.class)
public class LaneAttributes_Barrier extends Asn1Bitstring {

	public boolean isMedian_RevocableLane() {
		return get(0);
	}

	public void setMedian_RevocableLane(boolean median_RevocableLane) {
		set(0, median_RevocableLane);
	}

	public boolean isMedian() {
		return get(1);
	}

	public void setMedian(boolean median) {
		set(1, median);
	}

	public boolean isWhiteLineHashing() {
		return get(2);
	}

	public void setWhiteLineHashing(boolean whiteLineHashing) {
		set(2, whiteLineHashing);
	}

	public boolean isStripedLines() {
		return get(3);
	}

	public void setStripedLines(boolean stripedLines) {
		set(3, stripedLines);
	}

	public boolean isDoubleStripedLines() {
		return get(4);
	}

	public void setDoubleStripedLines(boolean doubleStripedLines) {
		set(4, doubleStripedLines);
	}

	public boolean isTrafficCones() {
		return get(5);
	}

	public void setTrafficCones(boolean trafficCones) {
		set(5, trafficCones);
	}

	public boolean isConstructionBarrier() {
		return get(6);
	}

	public void setConstructionBarrier(boolean constructionBarrier) {
		set(6, constructionBarrier);
	}

	public boolean isTrafficChannels() {
		return get(7);
	}

	public void setTrafficChannels(boolean trafficChannels) {
		set(7, trafficChannels);
	}

	public boolean isLowCurbs() {
		return get(8);
	}

	public void setLowCurbs(boolean lowCurbs) {
		set(8, lowCurbs);
	}

	public boolean isHighCurbs() {
		return get(9);
	}

	public void setHighCurbs(boolean highCurbs) {
		set(9, highCurbs);
	}

	public LaneAttributes_Barrier() {
		super(16, false,
				new String[]{"median-RevocableLane", "median", "whiteLineHashing", "stripedLines", "doubleStripedLines",
						"trafficCones", "constructionBarrier", "trafficChannels", "lowCurbs", "highCurbs"});
	}
}