package j2735.DSRC;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import asn2pojo.runtime.annotations.Asn1Property;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class BrakeSystemStatus extends Asn1Sequence {

	@Asn1Property(tag = 0)
	private BrakeAppliedStatus wheelBrakes;
	@Asn1Property(tag = 1)
	private TractionControlStatus traction;
	@Asn1Property(tag = 2)
	private AntiLockBrakeStatus abs;
	@Asn1Property(tag = 3)
	private StabilityControlStatus scs;
	@Asn1Property(tag = 4)
	private BrakeBoostApplied brakeBoost;
	@Asn1Property(tag = 5)
	private AuxiliaryBrakeStatus auxBrakes;

	public BrakeAppliedStatus getWheelBrakes() {
		return wheelBrakes;
	}

	public void setWheelBrakes(BrakeAppliedStatus wheelBrakes) {
		this.wheelBrakes = wheelBrakes;
	}

	public TractionControlStatus getTraction() {
		return traction;
	}

	public void setTraction(TractionControlStatus traction) {
		this.traction = traction;
	}

	public AntiLockBrakeStatus getAbs() {
		return abs;
	}

	public void setAbs(AntiLockBrakeStatus abs) {
		this.abs = abs;
	}

	public StabilityControlStatus getScs() {
		return scs;
	}

	public void setScs(StabilityControlStatus scs) {
		this.scs = scs;
	}

	public BrakeBoostApplied getBrakeBoost() {
		return brakeBoost;
	}

	public void setBrakeBoost(BrakeBoostApplied brakeBoost) {
		this.brakeBoost = brakeBoost;
	}

	public AuxiliaryBrakeStatus getAuxBrakes() {
		return auxBrakes;
	}

	public void setAuxBrakes(AuxiliaryBrakeStatus auxBrakes) {
		this.auxBrakes = auxBrakes;
	}

	BrakeSystemStatus() {
		super(false);
	}
}