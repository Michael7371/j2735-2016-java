package j2735.DSRC;

import asn2pojo.runtime.types.Asn1Bitstring;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonDeserialize(using = LaneAttributes_CrosswalkDeserializer.class)
public class LaneAttributes_Crosswalk extends Asn1Bitstring {

	public boolean isCrosswalkRevocableLane() {
		return get(0);
	}

	public void setCrosswalkRevocableLane(boolean crosswalkRevocableLane) {
		set(0, crosswalkRevocableLane);
	}

	public boolean isBicyleUseAllowed() {
		return get(1);
	}

	public void setBicyleUseAllowed(boolean bicyleUseAllowed) {
		set(1, bicyleUseAllowed);
	}

	public boolean isIsXwalkFlyOverLane() {
		return get(2);
	}

	public void setIsXwalkFlyOverLane(boolean isXwalkFlyOverLane) {
		set(2, isXwalkFlyOverLane);
	}

	public boolean isFixedCycleTime() {
		return get(3);
	}

	public void setFixedCycleTime(boolean fixedCycleTime) {
		set(3, fixedCycleTime);
	}

	public boolean isBiDirectionalCycleTimes() {
		return get(4);
	}

	public void setBiDirectionalCycleTimes(boolean biDirectionalCycleTimes) {
		set(4, biDirectionalCycleTimes);
	}

	public boolean isHasPushToWalkButton() {
		return get(5);
	}

	public void setHasPushToWalkButton(boolean hasPushToWalkButton) {
		set(5, hasPushToWalkButton);
	}

	public boolean isAudioSupport() {
		return get(6);
	}

	public void setAudioSupport(boolean audioSupport) {
		set(6, audioSupport);
	}

	public boolean isRfSignalRequestPresent() {
		return get(7);
	}

	public void setRfSignalRequestPresent(boolean rfSignalRequestPresent) {
		set(7, rfSignalRequestPresent);
	}

	public boolean isUnsignalizedSegmentsPresent() {
		return get(8);
	}

	public void setUnsignalizedSegmentsPresent(boolean unsignalizedSegmentsPresent) {
		set(8, unsignalizedSegmentsPresent);
	}

	public LaneAttributes_Crosswalk() {
		super(16, false,
				new String[]{"crosswalkRevocableLane", "bicyleUseAllowed", "isXwalkFlyOverLane", "fixedCycleTime",
						"biDirectionalCycleTimes", "hasPushToWalkButton", "audioSupport", "rfSignalRequestPresent",
						"unsignalizedSegmentsPresent"});
	}
}