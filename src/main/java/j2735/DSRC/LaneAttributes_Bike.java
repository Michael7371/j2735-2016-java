package j2735.DSRC;

import asn2pojo.runtime.types.Asn1Bitstring;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonDeserialize(using = LaneAttributes_BikeDeserializer.class)
public class LaneAttributes_Bike extends Asn1Bitstring {

	public boolean isBikeRevocableLane() {
		return get(0);
	}

	public void setBikeRevocableLane(boolean bikeRevocableLane) {
		set(0, bikeRevocableLane);
	}

	public boolean isPedestrianUseAllowed() {
		return get(1);
	}

	public void setPedestrianUseAllowed(boolean pedestrianUseAllowed) {
		set(1, pedestrianUseAllowed);
	}

	public boolean isIsBikeFlyOverLane() {
		return get(2);
	}

	public void setIsBikeFlyOverLane(boolean isBikeFlyOverLane) {
		set(2, isBikeFlyOverLane);
	}

	public boolean isFixedCycleTime() {
		return get(3);
	}

	public void setFixedCycleTime(boolean fixedCycleTime) {
		set(3, fixedCycleTime);
	}

	public boolean isBiDirectionalCycleTimes() {
		return get(4);
	}

	public void setBiDirectionalCycleTimes(boolean biDirectionalCycleTimes) {
		set(4, biDirectionalCycleTimes);
	}

	public boolean isIsolatedByBarrier() {
		return get(5);
	}

	public void setIsolatedByBarrier(boolean isolatedByBarrier) {
		set(5, isolatedByBarrier);
	}

	public boolean isUnsignalizedSegmentsPresent() {
		return get(6);
	}

	public void setUnsignalizedSegmentsPresent(boolean unsignalizedSegmentsPresent) {
		set(6, unsignalizedSegmentsPresent);
	}

	public LaneAttributes_Bike() {
		super(16, false, new String[]{"bikeRevocableLane", "pedestrianUseAllowed", "isBikeFlyOverLane",
				"fixedCycleTime", "biDirectionalCycleTimes", "isolatedByBarrier", "unsignalizedSegmentsPresent"});
	}
}