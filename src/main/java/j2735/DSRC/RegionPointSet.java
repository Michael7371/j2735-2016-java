package j2735.DSRC;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import asn2pojo.runtime.annotations.Asn1Property;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class RegionPointSet extends Asn1Sequence {

	@Asn1Property(tag = 0, optional = true)
	private Position3D anchor;
	@Asn1Property(tag = 1, optional = true)
	@JsonDeserialize(using = Zoom.ZoomDeserializer.class)
	private Zoom scale;
	@Asn1Property(tag = 2)
	@JacksonXmlElementWrapper(localName = "nodeList")
	@JacksonXmlProperty(localName = "RegionOffsets")
	private RegionList nodeList;

	public Position3D getAnchor() {
		return anchor;
	}

	public void setAnchor(Position3D anchor) {
		this.anchor = anchor;
	}

	public Zoom getScale() {
		return scale;
	}

	public void setScale(Zoom scale) {
		this.scale = scale;
	}

	public RegionList getNodeList() {
		return nodeList;
	}

	public void setNodeList(RegionList nodeList) {
		this.nodeList = nodeList;
	}

	RegionPointSet() {
		super(true);
	}
}