package j2735.DSRC;

import asn2pojo.runtime.annotations.Asn1Property;
import asn2pojo.runtime.types.Asn1Sequence;
import asn2pojo.runtime.types.Asn1SequenceOf;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import j2735.REGION.Reg_MovementEvent;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class MovementEvent extends Asn1Sequence {

	@Asn1Property(tag = 0)
	private MovementPhaseState eventState;
	@Asn1Property(tag = 1, optional = true)
	private TimeChangeDetails timing;
	@Asn1Property(tag = 2, optional = true)
	@JacksonXmlElementWrapper(localName = "speeds")
	@JacksonXmlProperty(localName = "AdvisorySpeed")
	private AdvisorySpeedList speeds;
	@Asn1Property(tag = 3, optional = true)
	private SequenceOfRegional regional;

	public MovementPhaseState getEventState() {
		return eventState;
	}

	public void setEventState(MovementPhaseState eventState) {
		this.eventState = eventState;
	}

	public TimeChangeDetails getTiming() {
		return timing;
	}

	public void setTiming(TimeChangeDetails timing) {
		this.timing = timing;
	}

	public AdvisorySpeedList getSpeeds() {
		return speeds;
	}

	public void setSpeeds(AdvisorySpeedList speeds) {
		this.speeds = speeds;
	}

	@JsonInclude(Include.NON_NULL)
	public static class SequenceOfRegional extends Asn1SequenceOf<Reg_MovementEvent> {
		SequenceOfRegional() {
			super(Reg_MovementEvent.class, 1L, 4L);
		}
	}

	public SequenceOfRegional getRegional() {
		return regional;
	}

	public void setRegional(SequenceOfRegional regional) {
		this.regional = regional;
	}

	MovementEvent() {
		super(true);
	}
}