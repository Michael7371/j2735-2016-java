package j2735.DSRC;

import asn2pojo.runtime.types.Asn1Enumerated;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonSerialize(using = NodeAttributeLLSerializer.class)
@JsonDeserialize(using = NodeAttributeLLDeserializer.class)
public enum NodeAttributeLL implements Asn1Enumerated {
	reserved(0, "reserved"), stopLine(1, "stopLine"), roundedCapStyleA(2, "roundedCapStyleA"), roundedCapStyleB(3,
			"roundedCapStyleB"), mergePoint(4, "mergePoint"), divergePoint(5, "divergePoint"), downstreamStopLine(6,
					"downstreamStopLine"), downstreamStartNode(7, "downstreamStartNode"), closedToTraffic(8,
							"closedToTraffic"), safeIsland(9, "safeIsland"), curbPresentAtStepOff(10,
									"curbPresentAtStepOff"), hydrantPresent(11, "hydrantPresent");

	private final int index;
	private final String name;

	public int getIndex() {
		return index;
	}

	public String getName() {
		return name;
	}

	public boolean hasExtensionMarker() {
		return false;
	}

	private NodeAttributeLL(int index, String name) {
		this.index = index;
		this.name = name;
	}

	public int maxIndex() {
		return 11;
	}
}