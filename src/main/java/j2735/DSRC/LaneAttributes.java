package j2735.DSRC;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import asn2pojo.runtime.annotations.Asn1Property;
import j2735.REGION.Reg_LaneAttributes;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class LaneAttributes extends Asn1Sequence {

	@Asn1Property(tag = 0)
	private LaneDirection directionalUse;
	@Asn1Property(tag = 1)
	private LaneSharing sharedWith;
	@Asn1Property(tag = 2)
	private LaneTypeAttributes laneType;
	@Asn1Property(tag = 3, optional = true)
	private Reg_LaneAttributes regional;

	public LaneDirection getDirectionalUse() {
		return directionalUse;
	}

	public void setDirectionalUse(LaneDirection directionalUse) {
		this.directionalUse = directionalUse;
	}

	public LaneSharing getSharedWith() {
		return sharedWith;
	}

	public void setSharedWith(LaneSharing sharedWith) {
		this.sharedWith = sharedWith;
	}

	public LaneTypeAttributes getLaneType() {
		return laneType;
	}

	public void setLaneType(LaneTypeAttributes laneType) {
		this.laneType = laneType;
	}

	public Reg_LaneAttributes getRegional() {
		return regional;
	}

	public void setRegional(Reg_LaneAttributes regional) {
		this.regional = regional;
	}

	LaneAttributes() {
		super(false);
	}
}