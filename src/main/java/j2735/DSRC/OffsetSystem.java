package j2735.DSRC;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import asn2pojo.runtime.annotations.Asn1Property;
import asn2pojo.runtime.types.Asn1Choice;
import java.util.List;
import java.util.Optional;
import asn2pojo.runtime.types.Asn1Type;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class OffsetSystem extends Asn1Sequence {

	@Asn1Property(tag = 0, optional = true)
	private Zoom scale;
	@Asn1Property(tag = 1)
	private OffsetChoice offset;

	public Zoom getScale() {
		return scale;
	}

	public void setScale(Zoom scale) {
		this.scale = scale;
	}

	@JsonInclude(Include.NON_NULL)
	public static class OffsetChoice extends Asn1Choice {
		@Asn1Property(tag = 0)
		private NodeListXY xy;
		@Asn1Property(tag = 1)
		private NodeListLL ll;

		OffsetChoice() {
			super(false);
		}

		public NodeListXY getXy() {
			return xy;
		}

		public void setXy(NodeListXY xy) {
			this.xy = xy;
		}

		public NodeListLL getLl() {
			return ll;
		}

		public void setLl(NodeListLL ll) {
			this.ll = ll;
		}

		@Override
		protected List<Optional<Asn1Type>> listTypes() {
			return null;
		}
	}

	public OffsetChoice getOffset() {
		return offset;
	}

	public void setOffset(OffsetChoice offset) {
		this.offset = offset;
	}

	OffsetSystem() {
		super(false);
	}
}