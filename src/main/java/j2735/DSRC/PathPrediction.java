package j2735.DSRC;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import asn2pojo.runtime.annotations.Asn1Property;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class PathPrediction extends Asn1Sequence {

	@Asn1Property(tag = 0)
	@JsonDeserialize(using = RadiusOfCurvature.RadiusOfCurvatureDeserializer.class)
	private RadiusOfCurvature radiusOfCurve;
	@Asn1Property(tag = 1)
	@JsonDeserialize(using = Confidence.ConfidenceDeserializer.class)
	private Confidence confidence;

	public RadiusOfCurvature getRadiusOfCurve() {
		return radiusOfCurve;
	}

	public void setRadiusOfCurve(RadiusOfCurvature radiusOfCurve) {
		this.radiusOfCurve = radiusOfCurve;
	}

	public Confidence getConfidence() {
		return confidence;
	}

	public void setConfidence(Confidence confidence) {
		this.confidence = confidence;
	}

	PathPrediction() {
		super(true);
	}
}