package j2735.DSRC;

import asn2pojo.runtime.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import asn2pojo.runtime.annotations.Asn1Property;
import j2735.ITIS.ITIScodes;
import j2735.ITIS.GenericLocations;

/**
 * 
 * <p>
 * This source code was generated by a tool. Manual edits are futile.
 * </p>
 * <p>
 * asn1jvm v1.0-SNAPSHOT
 * </p>
 * <p>
 * ASN.1 source files:
 * </p>
 * 
 * <pre>
 * J2735_201603DA.ASN
 * </pre>
 * 
 */
@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class ObstacleDetection extends Asn1Sequence {

	@Asn1Property(tag = 0)
	private ObstacleDistance obDist;
	@Asn1Property(tag = 1)
	private ObstacleDirection obDirect;
	@Asn1Property(tag = 2, optional = true)
	private ITIScodes description;
	@Asn1Property(tag = 3, optional = true)
	private GenericLocations locationDetails;
	@Asn1Property(tag = 4)
	private DDateTime dateTime;
	@Asn1Property(tag = 5, optional = true)
	private VerticalAccelerationThreshold vertEvent;

	public ObstacleDistance getObDist() {
		return obDist;
	}

	public void setObDist(ObstacleDistance obDist) {
		this.obDist = obDist;
	}

	public ObstacleDirection getObDirect() {
		return obDirect;
	}

	public void setObDirect(ObstacleDirection obDirect) {
		this.obDirect = obDirect;
	}

	public ITIScodes getDescription() {
		return description;
	}

	public void setDescription(ITIScodes description) {
		this.description = description;
	}

	public GenericLocations getLocationDetails() {
		return locationDetails;
	}

	public void setLocationDetails(GenericLocations locationDetails) {
		this.locationDetails = locationDetails;
	}

	public DDateTime getDateTime() {
		return dateTime;
	}

	public void setDateTime(DDateTime dateTime) {
		this.dateTime = dateTime;
	}

	public VerticalAccelerationThreshold getVertEvent() {
		return vertEvent;
	}

	public void setVertEvent(VerticalAccelerationThreshold vertEvent) {
		this.vertEvent = vertEvent;
	}

	ObstacleDetection() {
		super(true);
	}
}