package us.dot.its.jpo.ode.plugin.j2735.DSRC;

import us.dot.its.jpo.ode.plugin.types.Asn1Sequence;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import lombok.Getter;
import lombok.Setter;
import us.dot.its.jpo.ode.plugin.annotations.Asn1Property;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * 
 *******************************************************************************
 *
 * This source file was generated by a tool. Beware manual edits might be
 * overwritten in future releases. asn1jvm v1.0-SNAPSHOT
 *
 *******************************************************************************
 * Copyright 2024 USDOT
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 ******************************************************************************
 * 
 */
@JsonInclude(Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Getter
@Setter
public class J1939data extends Asn1Sequence {

	@Asn1Property(tag = 0, optional = true)
	@JacksonXmlElementWrapper(localName = "tires")
	@JacksonXmlProperty(localName = "TireData")
	private TireDataList tires;
	@Asn1Property(tag = 1, optional = true)
	@JacksonXmlElementWrapper(localName = "axles")
	@JacksonXmlProperty(localName = "AxleWeightSet")
	private AxleWeightList axles;
	@Asn1Property(tag = 2, optional = true)
	@JsonDeserialize(using = TrailerWeight.TrailerWeightDeserializer.class)
	private TrailerWeight trailerWeight;
	@Asn1Property(tag = 3, optional = true)
	@JsonDeserialize(using = CargoWeight.CargoWeightDeserializer.class)
	private CargoWeight cargoWeight;
	@Asn1Property(tag = 4, optional = true)
	@JsonDeserialize(using = SteeringAxleTemperature.SteeringAxleTemperatureDeserializer.class)
	private SteeringAxleTemperature steeringAxleTemperature;
	@Asn1Property(tag = 5, optional = true)
	@JsonDeserialize(using = DriveAxleLocation.DriveAxleLocationDeserializer.class)
	private DriveAxleLocation driveAxleLocation;
	@Asn1Property(tag = 6, optional = true)
	@JsonDeserialize(using = DriveAxleLiftAirPressure.DriveAxleLiftAirPressureDeserializer.class)
	private DriveAxleLiftAirPressure driveAxleLiftAirPressure;
	@Asn1Property(tag = 7, optional = true)
	@JsonDeserialize(using = DriveAxleTemperature.DriveAxleTemperatureDeserializer.class)
	private DriveAxleTemperature driveAxleTemperature;
	@Asn1Property(tag = 8, optional = true)
	@JsonDeserialize(using = DriveAxleLubePressure.DriveAxleLubePressureDeserializer.class)
	private DriveAxleLubePressure driveAxleLubePressure;
	@Asn1Property(tag = 9, optional = true)
	@JsonDeserialize(using = SteeringAxleLubePressure.SteeringAxleLubePressureDeserializer.class)
	private SteeringAxleLubePressure steeringAxleLubePressure;

	J1939data() {
		super(true);
	}
}